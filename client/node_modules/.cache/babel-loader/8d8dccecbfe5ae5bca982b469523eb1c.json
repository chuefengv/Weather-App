{"ast":null,"code":"var _jsxFileName = \"/Users/feng/Desktop/Weather-App/src/components/body/display/Display.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Clock from 'react-live-clock';\nimport './Display.css';\nimport WeatherIcon from './weather_icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display({\n  flag,\n  lastState,\n  lastCity\n}) {\n  _s();\n\n  const [temp, setTemp] = useState(\"\");\n  const [precipitation, setPrecipitation] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [wind, setWind] = useState(\"\");\n  const [weatherDesc, setWeatherDesc] = useState(\"\");\n  const [timezone, setTimezone] = useState(\"\");\n  const [forecast, setForecast] = useState(113);\n  const firstRun = useRef(true);\n  const firstRun2 = useRef(true);\n  useEffect(() => {\n    if (firstRun.current) {\n      firstRun.current = false;\n      return;\n    }\n\n    axios.get(`http://api.weatherstack.com/current?access_key=${process.env.API_KEY}&units=f&query=${lastState},united_states`).then(res => {\n      setTemp(res.data.current.temperature);\n      setPrecipitation(res.data.current.precip);\n      setHumidity(res.data.current.humidity);\n      setWind(res.data.current.wind_speed);\n      setWeatherDesc(res.data.current.weather_descriptions);\n      setTimezone(res.data.location.timezone_id);\n      setForecast(res.data.current.weather_code);\n    }).catch(err => {\n      console.log('bad error');\n    });\n  }, [lastState]);\n  useEffect(() => {\n    if (firstRun2.current) {\n      firstRun2.current = false;\n      return;\n    }\n\n    axios.get(`http://api.weatherstack.com/current?access_key=${process.env.API_KEY}&units=f&query=${lastCity},${lastState},united_states`).then(res => {\n      setTemp(res.data.current.temperature);\n      setPrecipitation(res.data.current.precip);\n      setHumidity(res.data.current.humidity);\n      setWind(res.data.current.wind_speed);\n      setWeatherDesc(res.data.current.weather_descriptions);\n      setTimezone(res.data.location.timezone_id);\n      setForecast(res.data.current.weather_code);\n    }).catch(err => {\n      console.log('bad error');\n    });\n  }, [lastCity, lastState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature\",\n      children: [!lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"0\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 32\n      }, this), lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [temp, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-desc\",\n      children: [!lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"What To Expect Outside\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }, this), lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weatherDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-details\",\n      children: [!lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Precipitation: 0%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), \"Humidity: 0%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), \"Wind Speeds: 0mph\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Precipitation: \", precipitation, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), \"Humidity: \", humidity, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), \"Wind Speeds: \", wind, \"mph\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-name\",\n      children: lastCity && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", lastCity, \", \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-name\",\n      children: [!lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Today's Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 32\n      }, this), lastState && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", lastState]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-display\",\n      children: [!lastState && /*#__PURE__*/_jsxDEV(Clock, {\n        format: 'h:mm A',\n        ticking: true,\n        timezone: 'UTC'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 32\n      }, this), lastState && /*#__PURE__*/_jsxDEV(Clock, {\n        format: 'h:mm A',\n        ticking: true,\n        timezone: timezone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-display\",\n      children: /*#__PURE__*/_jsxDEV(Clock, {\n        format: 'dddd'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-icon\",\n      children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n        forecast: forecast,\n        lastState: lastState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Display, \"FWBlMAqZzg7vFcqZy9Ya/69qSyE=\");\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/feng/Desktop/Weather-App/src/components/body/display/Display.jsx"],"names":["React","useEffect","useRef","useState","axios","Clock","WeatherIcon","Display","flag","lastState","lastCity","temp","setTemp","precipitation","setPrecipitation","humidity","setHumidity","wind","setWind","weatherDesc","setWeatherDesc","timezone","setTimezone","forecast","setForecast","firstRun","firstRun2","current","get","process","env","API_KEY","then","res","data","temperature","precip","wind_speed","weather_descriptions","location","timezone_id","weather_code","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState }  from 'react'\nimport axios from 'axios';\nimport Clock from 'react-live-clock';\nimport './Display.css'\nimport WeatherIcon from './weather_icon'\n\nfunction Display({flag, lastState, lastCity}){\n\n    const [temp, setTemp] = useState(\"\");\n    const [precipitation, setPrecipitation] = useState(\"\");\n    const [humidity, setHumidity] = useState(\"\");\n    const [wind, setWind] = useState(\"\");\n    const [weatherDesc, setWeatherDesc] = useState(\"\");\n    const [timezone, setTimezone] = useState(\"\");\n    const [forecast, setForecast] = useState(113);\n    const firstRun = useRef(true);\n    const firstRun2 = useRef(true);\n\n\n    useEffect(()=>{\n        if (firstRun.current) {\n            firstRun.current = false;\n            return;\n        }\n        axios.get(`http://api.weatherstack.com/current?access_key=${process.env.API_KEY}&units=f&query=${lastState},united_states`)    \n            .then(res =>{\n                    setTemp(res.data.current.temperature);\n                    setPrecipitation(res.data.current.precip);\n                    setHumidity(res.data.current.humidity);\n                    setWind(res.data.current.wind_speed);\n                    setWeatherDesc(res.data.current.weather_descriptions);\n                    setTimezone(res.data.location.timezone_id);\n                    setForecast(res.data.current.weather_code);     \n                \n            })\n            .catch(err =>{\n                console.log('bad error');\n            })\n    },[lastState]);\n\n    useEffect(()=>{\n        if (firstRun2.current) {\n            firstRun2.current = false;\n            return;\n        }\n        axios.get(`http://api.weatherstack.com/current?access_key=${process.env.API_KEY}&units=f&query=${lastCity},${lastState},united_states`)    \n        .then(res =>{\n                setTemp(res.data.current.temperature);\n                setPrecipitation(res.data.current.precip);\n                setHumidity(res.data.current.humidity);\n                setWind(res.data.current.wind_speed);\n                setWeatherDesc(res.data.current.weather_descriptions);\n                setTimezone(res.data.location.timezone_id);\n                setForecast(res.data.current.weather_code);\n        })\n        .catch(err =>{\n            console.log('bad error');\n        })\n    },[lastCity, lastState]);\n\n\n    return(\n        <div className='display'>\n            <div className='temperature'>\n                {!lastState && <div>0°F</div>}\n                {lastState && <div>{temp}°F</div>}\n            </div>\n            <div className='weather-desc'>\n                {!lastState && <div>What To Expect Outside</div>}\n                {lastState && <div>{weatherDesc}</div>}\n            </div>\n            <div className='weather-details'>\n            {!lastState && \n            <div >\n                Precipitation: 0%\n                <br></br>\n                Humidity: 0%\n                <br></br>\n                Wind Speeds: 0mph\n            </div>}\n            {lastState && \n            <div>\n                Precipitation: {precipitation}%\n                <br></br>\n                Humidity: {humidity}%\n                <br></br>\n                Wind Speeds: {wind}mph\n            </div>}\n            </div>\n            <div className='city-name'>\n                {lastCity && <div> {lastCity}, </div>}\n            </div> \n            <div className='state-name'>\n                {!lastState && <div>Today's Forecast</div>}\n                {lastState && <div> {lastState}</div>}\n            </div>\n            <div className='time-display'>\n                {!lastState && <Clock format={'h:mm A'} ticking={true} timezone={'UTC'} />}\n                {lastState && <Clock format={'h:mm A'} ticking={true} timezone={timezone} />}\n            </div>\n            <div className='date-display'>\n                {<Clock format={'dddd'} />}\n            </div>\n            <div className='weather-icon'>\n                <WeatherIcon forecast={forecast} lastState={lastState}/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}